n = 0;

%m = 99999; %Number of data sets generated by the code - each have different magnetic field parameters
%m = 19999; %Number of data sets generated by the code - each have different magnetic field parameters

%m = 9999; %Number of data sets generated by the code - each have different magnetic field parameters
m = 1999; %Number of data sets generated by the code - each have different magnetic field parameters

%m=0;

%data_type = 'train';
%data_type = 'valid';
data_type = 'test';

test_simulation = 0; % if 1 saves images and data.
num_of_measures = 50; %Number of measurement points (projections)
% freqs_to_try = ones(1, n) * 3;%300 samples of 3 freqs together. Usages: 3 or [2,3,4];
freqs_to_try = 3; %simultanious frequencies

% ================= data 1
% set in mock_diamond2_new_galya obj.B_theta=24.99; obj.B_phi=13.3742; obj.B_mag=98; <= OLD VALUES
% set in mock_diamond2_new_galya obj.B_theta=24.88; obj.B_phi=64.958; obj.B_mag=83.28;

%center_freq = 2875; % MHz
%center_freq = 2898; % MHz  <== align the center with real data
%half_window_size = 325; %in MHz
%N=421;  %num of frequencies within frequency window - linespace
%noiseSigma=0.0004; %expressed as a fraction of the mean

% ================= data 2
% set in mock_diamond2_new_galya obj.B_theta=26.352; obj.B_phi=15.2137; obj.B_mag=120.78; <= OLD VALUES
% set in mock_diamond2_new_galya obj.B_theta=23.124; obj.B_phi=63.15; obj.B_mag=101.87;

%center_freq = 2875; % MHz
%center_freq = 2907; % MHz  <== align the center with real data
%half_window_size = 325; %in MHz
%N=651;  %num of frequencies within frequency window - linespace
%noiseSigma=0.001; %expressed as a fraction of the mean

% ================= data 3
% set in mock_diamond2_new_galya obj.B_theta=20.8; obj.B_phi=8.58; obj.B_mag=55.78; <= OLD VALUES
% set in mock_diamond2_new_galya obj.B_theta=29.77; obj.B_phi=69.1834; obj.B_mag=48.32;

%center_freq = 2860; % MHz
%center_freq = 2880; % MHz  <== align the center with real data
%half_window_size = 150; %in MHz
%N=1000;  %num of frequencies within frequency window - linespace
%noiseSigma=0.00006; %expressed as a fraction of the mean

% ================= data 4
% set in mock_diamond2_new_galya obj.B_theta=26.0484; obj.B_phi=16.0878; obj.B_mag=81.34; <= OLD VALUES
% set in mock_diamond2_new_galya obj.B_theta=23.73; obj.B_phi=66.27; obj.B_mag=69.5;

%center_freq = 2870; % MHz
%half_window_size = 270; %in MHz
%N=191;  %num of frequencies within frequency window - linespace
%noiseSigma=0.0039; %expressed as a fraction of the mean

% ================= data small field 1
% set in mock_diamond2_new_galya obj.B_theta=25.5755; obj.B_phi=67.3352; obj.B_mag=38.17;

%center_freq = 2865; % MHz
center_freq = 2877; % MHz  <== align the center with real data
%half_window_size = 135; %in MHz
half_window_size = 123; %in MHz  <== align right margin with real data
%N=270;  %num of frequencies within frequency window - linespace
N=246;  %num of frequencies within frequency window - linespace <== adjust for the loss of measurements in left margin
%noiseSigma=0.0004; %expressed as a fraction of the mean
noiseSigma=0.00043304; % real value from data

if test_simulation == 1
    sz_str = strcat('./simulation_testing/');
else
%    sz_str = strcat('../data/galya_compatible-measures_',num2str(num_of_measures),'-center_freq_',num2str(center_freq),'-half_window_size_',num2str(half_window_size),'-N_',num2str(N),'-noise_',num2str(noiseSigma),'/', data_type, '/');
%    sz_str = strcat('../data/full_galya_compatible-measures_',num2str(num_of_measures),'-center_freq_',num2str(center_freq),'-half_window_size_',num2str(half_window_size),'-N_',num2str(N),'-noise_',num2str(noiseSigma),'/', data_type, '/');
    sz_str = strcat('../data/full_galya_compatible-measures_',num2str(num_of_measures),'-center_freq_',num2str(center_freq),'-half_window_size_',num2str(half_window_size),'-N_',num2str(N),'-noise_',num2str(noiseSigma),'-v2','/', data_type, '/');
%    sz_str = strcat('../data/pred_galya_compatible-measures_',num2str(num_of_measures),'-center_freq_',num2str(center_freq),'-half_window_size_',num2str(half_window_size),'-N_',num2str(N),'-noise_',num2str(noiseSigma),'/', data_type, '/');
end

if ~exist(sz_str, 'dir')
    mkdir(sz_str)
end

%% Get diamond simulation
for j = n : m
%    B_theta = 50;
%    B_phi = 20;
%
     % ================= data 1
%    B_theta = 24.88;
%    B_phi = 64.958;
%    B_mag = 83.28;

%    B_theta = (35 - 10).*rand(1,1) + 10;
%    B_phi = (30 - 0).*rand(1,1) + 0;
%    B_mag = (120 - 80).*rand(1,1) + 80; % large values.
%%   B_mag = (120 - 55).*rand(1,1) + 55; % small values.

     % ================= data 2
%    B_theta=23.124;
%    B_phi=63.15;
%    B_mag=101.87;

     % ================= data 3
%    B_theta=29.77;
%    B_phi=69.1834;
%    B_mag=48.32;
    
    % ================= data 4
%    B_theta=23.73;
%    B_phi=66.27;
%    B_mag=69.5;

    % ================= data small field 1
%    B_theta=25.5755;
%    B_phi=67.3352;
%    B_mag=38.17;

%    B_theta = (90 - 0).*rand(1,1) + 0;
%    B_phi = (90 - 0).*rand(1,1) + 0;
%    B_mag = (60 - 20).*rand(1,1) + 20;

    %second version
    B_theta = (27 - 23).*rand(1,1) + 23;
    B_phi = (69 - 65).*rand(1,1) + 65;
    B_mag = (55 - 25).*rand(1,1) + 25;

    %predictions
%    B_theta=38.853794; B_phi=85.094955; B_mag=36.610756;
%    B_theta=48.802673; B_phi=75.85471; B_mag=35.207268;
%    B_theta=53.233727; B_phi=70.21461; B_mag=34.527103;
%    B_theta=39.882477; B_phi=74.31545; B_mag=34.480118;
%    B_theta=52.14078; B_phi=46.158737; B_mag=35.314854;
%    B_theta=20.990074; B_phi=55.871544; B_mag=35.644855; % <- best validation fgsfrun3p
%    B_theta=1.1333672; B_phi=26.853268; B_mag=34.575546; % <- last validation fgsfrun3p
%    B_theta=40.847404; B_phi=64.16904; B_mag=32.8957; % <- last fgsfrun1p
%    B_theta=25.449776; B_phi=68.92036; B_mag=37.697388; % <- 199 fgsfrun5p
%    B_theta=25.691587; B_phi=68.56451; B_mag=38.037262; % <- last fgsfrun5p
    
    
    data = mock_diamond2_new_galya(N, center_freq, half_window_size, noiseSigma, B_mag, B_theta, B_phi);
    [projs, smp_mtx] = fun_cs(num_of_measures, N, data);
    
    t = cputime;
                     
    data_struct = struct();
    data_struct = setfield(data_struct, 'projs', projs);
    data_struct = setfield(data_struct, 'magnetic_field', data.B_mag);
    data_struct = setfield(data_struct, 'B_theta', data.B_theta);
    data_struct = setfield(data_struct, 'B_phi', data.B_phi);
    data_struct = setfield(data_struct, 'relevant_window', data.relevant_window);
    data_struct = setfield(data_struct, 'smp_freqs', data.smp_freqs);
    data_struct = setfield(data_struct, 'peak_locs', data.peak_locs);
    data_struct = setfield(data_struct, 'B_projs', data.B_projs);
    data_struct = setfield(data_struct, 'B_vec', data.B_vec);
    data_struct = setfield(data_struct, 'target', data.target);
    data_struct = setfield(data_struct, 'sig', data.sig);
    data_struct = setfield(data_struct, 'signal', data.signal);
    data_struct = setfield(data_struct, 'full_window_size_MHz', 2 * half_window_size);
    data_struct = setfield(data_struct, 'num_pts', data.num_pts);
        
    %switch data_type
    %    case 'train' 
    %        var_name = sprintf('CS_%d_.mat', j);
    %    case 'valid' 
    %        var_name = sprintf('valid_CS_%d_.mat', j);
    %    case 'test' 
    %        var_name = sprintf('test_CS_%d_.mat', j);
    %end
    
    var_name = sprintf('CS_%d.mat', j);
    % PAY ATTENTION TO THE NUMBER SAMPS! DO NOT OVERRIDE!!
    save(fullfile(sz_str, var_name), 'data_struct', '-v7.3');
    
    if test_simulation == 1
        save_smps(j);
    end
    
    t = cputime-t;
    disp(['Sample ' num2str(j) ' Took ' num2str(t) ' seconds total.'])
    %         clear 
end

exit
 
% in = [];
% in.tau = 0.0002;
% delx_mode = 'mil';
% in.delx_mode = delx_mode;
% in.debias = 1;
% in.verbose = 0;
% in.plots = 0;
% in.record = 0;
% in.Te = 8;
% in.nonneg = 1;
% 
% x = l1homotopy(smp_mtx, projs, in);
